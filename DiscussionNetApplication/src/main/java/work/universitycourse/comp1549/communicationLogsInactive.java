/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package work.universitycourse.comp1549;

import java.awt.Color;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Daniel Browne
 * 
 */
public class CommunicationLogsInactive extends javax.swing.JFrame {

    /**
     * Creates new form communicationLogsInactive
     */
    public CommunicationLogsInactive() {
        initComponents();
        table();
    }
    
        private  void table() {
      mainTable.getTableHeader().setOpaque(false);
      mainTable.getTableHeader().setBackground(Color.white);
      mainTable.getTableHeader().setForeground(new Color(47, 46, 65));
      
       mainTable.getTableHeader().setFont(new java.awt.Font("Montserrat Medium", 0, 13));

     DefaultTableCellRenderer stringRenderer = (DefaultTableCellRenderer)
     mainTable.getDefaultRenderer(String.class);
     stringRenderer.setHorizontalAlignment(SwingConstants.CENTER);

     DefaultTableCellRenderer renderer = (DefaultTableCellRenderer) mainTable.getTableHeader().getDefaultRenderer();
    renderer.setHorizontalAlignment(SwingConstants.CENTER);
    
    JTableHeader header = mainTable.getTableHeader();
    header.setBorder(new LineBorder(new Color(229,229,229),1));
    
   
      
   }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        communicationLogsLabel1 = new javax.swing.JLabel();
        scrollingPane = new javax.swing.JScrollPane();
        mainTable = new javax.swing.JTable();
        awaitingCommunicationLabel = new javax.swing.JLabel();
        communicationLogsLabel2 = new javax.swing.JLabel();
        middlePanel = new javax.swing.JPanel();
        serverStatusImageLabel = new javax.swing.JLabel();
        serverStatusLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        ipAddressLabel = new javax.swing.JLabel();
        portLabel = new javax.swing.JLabel();
        statusValueLabel = new javax.swing.JLabel();
        ipAddressValueLabel = new javax.swing.JLabel();
        portValueLabel = new javax.swing.JLabel();
        reconfigureServerLabel = new javax.swing.JLabel();
        footerPanel = new javax.swing.JPanel();
        footerTextLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(854, 519));
        setMinimumSize(new java.awt.Dimension(854, 519));
        setResizable(false);

        topPanel.setBackground(new java.awt.Color(255, 255, 255));
        topPanel.setMaximumSize(new java.awt.Dimension(854, 278));
        topPanel.setMinimumSize(new java.awt.Dimension(854, 278));
        topPanel.setPreferredSize(new java.awt.Dimension(854, 278));

        communicationLogsLabel1.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        communicationLogsLabel1.setText("Communication");

        mainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Origin IP Address", "Destination IP Address", "Request Type", "Request Value"
            }
        ));
        mainTable.setEnabled(false);
        mainTable.setRowHeight(30);
        mainTable.setRowSelectionAllowed(false);
        mainTable.getTableHeader().setReorderingAllowed(false);
        scrollingPane.setViewportView(mainTable);

        awaitingCommunicationLabel.setFont(new java.awt.Font("Montserrat Light", 0, 13)); // NOI18N
        awaitingCommunicationLabel.setForeground(new java.awt.Color(196, 196, 202));
        awaitingCommunicationLabel.setText("Awaiting Communication...");

        communicationLogsLabel2.setFont(new java.awt.Font("Montserrat SemiBold", 0, 24)); // NOI18N
        communicationLogsLabel2.setForeground(new java.awt.Color(0, 36, 109));
        communicationLogsLabel2.setText("Logs");

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addGap(292, 292, 292)
                        .addComponent(communicationLogsLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(communicationLogsLabel2))
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(scrollingPane, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addGap(325, 325, 325)
                        .addComponent(awaitingCommunicationLabel)))
                .addGap(261, 261, 261))
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(communicationLogsLabel1)
                    .addComponent(communicationLogsLabel2))
                .addGap(18, 18, 18)
                .addComponent(scrollingPane, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(awaitingCommunicationLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        middlePanel.setBackground(new java.awt.Color(255, 255, 255));

        serverStatusImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/broadcast_inactive.png"))); // NOI18N

        serverStatusLabel.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        serverStatusLabel.setText("Server Status");

        statusLabel.setFont(new java.awt.Font("Montserrat Medium", 0, 13)); // NOI18N
        statusLabel.setText("Status");

        ipAddressLabel.setFont(new java.awt.Font("Montserrat Medium", 0, 13)); // NOI18N
        ipAddressLabel.setText("IP Address");

        portLabel.setFont(new java.awt.Font("Montserrat Medium", 0, 13)); // NOI18N
        portLabel.setText("Port");

        statusValueLabel.setFont(new java.awt.Font("Montserrat Light", 0, 13)); // NOI18N
        statusValueLabel.setForeground(new java.awt.Color(255, 71, 87));
        statusValueLabel.setText("Offline");

        ipAddressValueLabel.setFont(new java.awt.Font("Montserrat Light", 0, 13)); // NOI18N
        ipAddressValueLabel.setText("-");

        portValueLabel.setFont(new java.awt.Font("Montserrat Light", 0, 13)); // NOI18N
        portValueLabel.setText("-");

        reconfigureServerLabel.setFont(new java.awt.Font("Montserrat Light", 0, 9)); // NOI18N
        reconfigureServerLabel.setForeground(new java.awt.Color(112, 161, 255));
        reconfigureServerLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reconfigure_server_arrow.png"))); // NOI18N
        reconfigureServerLabel.setText("Reconfigure Server");

        javax.swing.GroupLayout middlePanelLayout = new javax.swing.GroupLayout(middlePanel);
        middlePanel.setLayout(middlePanelLayout);
        middlePanelLayout.setHorizontalGroup(
            middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(middlePanelLayout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(serverStatusImageLabel)
                .addGap(114, 114, 114)
                .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(serverStatusLabel)
                    .addGroup(middlePanelLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(middlePanelLayout.createSequentialGroup()
                                .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(statusLabel)
                                    .addComponent(statusValueLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                                .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ipAddressLabel)
                                    .addGroup(middlePanelLayout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(ipAddressValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(middlePanelLayout.createSequentialGroup()
                                .addComponent(reconfigureServerLabel)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(59, 59, 59)
                .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(portLabel)
                    .addComponent(portValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        middlePanelLayout.setVerticalGroup(
            middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(middlePanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(serverStatusImageLabel)
                    .addGroup(middlePanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(serverStatusLabel)
                        .addGap(18, 18, 18)
                        .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statusLabel)
                            .addComponent(ipAddressLabel)
                            .addComponent(portLabel))
                        .addGap(18, 18, 18)
                        .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statusValueLabel)
                            .addComponent(ipAddressValueLabel)
                            .addComponent(portValueLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reconfigureServerLabel)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        footerPanel.setBackground(new java.awt.Color(255, 255, 255));

        footerTextLabel.setFont(new java.awt.Font("Montserrat", 0, 9)); // NOI18N
        footerTextLabel.setText("DiscussionNet V1.0 - © Code Squad 2021 - Software Licenses");

        javax.swing.GroupLayout footerPanelLayout = new javax.swing.GroupLayout(footerPanel);
        footerPanel.setLayout(footerPanelLayout);
        footerPanelLayout.setHorizontalGroup(
            footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(footerPanelLayout.createSequentialGroup()
                .addGap(284, 284, 284)
                .addComponent(footerTextLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        footerPanelLayout.setVerticalGroup(
            footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, footerPanelLayout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(footerTextLabel))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(middlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(footerPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(middlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(2, 2, 2)
                .addComponent(footerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CommunicationLogsInactive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CommunicationLogsInactive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CommunicationLogsInactive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CommunicationLogsInactive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CommunicationLogsInactive().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel awaitingCommunicationLabel;
    private javax.swing.JLabel communicationLogsLabel1;
    private javax.swing.JLabel communicationLogsLabel2;
    private javax.swing.JPanel footerPanel;
    private javax.swing.JLabel footerTextLabel;
    private javax.swing.JLabel ipAddressLabel;
    private javax.swing.JLabel ipAddressValueLabel;
    private javax.swing.JTable mainTable;
    private javax.swing.JPanel middlePanel;
    private javax.swing.JLabel portLabel;
    private javax.swing.JLabel portValueLabel;
    private javax.swing.JLabel reconfigureServerLabel;
    private javax.swing.JScrollPane scrollingPane;
    private javax.swing.JLabel serverStatusImageLabel;
    private javax.swing.JLabel serverStatusLabel;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel statusValueLabel;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables
}
