package work.universitycourse.comp1549.Interfaces.Server;

import java.awt.Color;
import javax.swing.JFrame;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import work.universitycourse.comp1549.Interfaces.Licenses;
import work.universitycourse.comp1549.Modules.InterfaceManager;
import work.universitycourse.comp1549.Modules.ServerManager;

/**
 *
 * @author Adnan Turan
 * @author Daniel Browne
 * @author Gabriel Netz
 * @author William Phillips
 * 
 */
public class ServerOverview extends javax.swing.JFrame {
    private static String serverIPAddress;
    private static String serverPort;

    /**
     * Creates new form communicationLogs
     */
    public ServerOverview(String serverIPAddress, String serverPort) {
        super();
        this.serverIPAddress = serverIPAddress;
        this.serverPort = serverPort;
        
        initComponents();
        table();
        
        new Thread(new Runnable() {
            private JTable serverLog;
            private String serverIPAddress;
            private int serverPort;
            private int maxConnections;

            public Runnable init(JTable serverLog, String serverIPAddress, int serverPort, int maxConnections) {
                this.serverLog = serverLog;
                this.serverIPAddress = serverIPAddress;
                this.serverPort = serverPort;
                this.maxConnections = maxConnections;
                return this;
            }

            @Override
            public void run() {
                ServerManager serverInstance = new ServerManager(this.serverLog, this.serverIPAddress, this.serverPort, 1024);
                serverInstance.startServer();
            }
        }.init(this.mainTable, this.serverIPAddress, Integer.parseInt(this.serverPort), 1024)).start();
        
    }

    private void table() {        
        mainTable.setOpaque(false);
        mainTable.setFillsViewportHeight(true);
        mainTable.setBackground(Color.white);

        mainTable.getTableHeader().setFont(new java.awt.Font("Montserrat Medium", 0, 13));

        DefaultTableCellRenderer stringRenderer = (DefaultTableCellRenderer) mainTable.getDefaultRenderer(String.class);
        stringRenderer.setHorizontalAlignment(SwingConstants.CENTER);

        DefaultTableCellRenderer renderer = (DefaultTableCellRenderer) mainTable.getTableHeader().getDefaultRenderer();
        renderer.setHorizontalAlignment(SwingConstants.CENTER);

        JTableHeader header = mainTable.getTableHeader();
        header.setBorder(new LineBorder(new Color(229, 229, 229), 1));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        communicationLogsLabel1 = new javax.swing.JLabel();
        communicationLogsLabel2 = new javax.swing.JLabel();
        scrollingPane = new javax.swing.JScrollPane();
        mainTable = new javax.swing.JTable();
        middlePanel = new javax.swing.JPanel();
        serverStatusTextLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        ipAddressLabel = new javax.swing.JLabel();
        portLabel = new javax.swing.JLabel();
        statusValueLabel = new javax.swing.JLabel();
        ipAddressValueLabel = new javax.swing.JLabel();
        portValueLabel = new javax.swing.JLabel();
        serverStatusImageLabel = new javax.swing.JLabel();
        footerPanel = new javax.swing.JPanel();
        footerTextLabel2 = new javax.swing.JLabel();
        footerLicensesTextLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("work/universitycourse/comp1549/Interfaces/Server/Bundle"); // NOI18N
        setTitle(bundle.getString("ServerOverview.title")); // NOI18N
        setIconImage(InterfaceManager.programIcon.getImage());
        setMinimumSize(new java.awt.Dimension(854, 519));
        setName("DiscussionNet"); // NOI18N
        setResizable(false);

        topPanel.setBackground(new java.awt.Color(255, 255, 255));
        topPanel.setMaximumSize(new java.awt.Dimension(847, 519));
        topPanel.setName("topPanel"); // NOI18N
        topPanel.setPreferredSize(new java.awt.Dimension(847, 519));
        InterfaceManager.detectExitRequest(topPanel);

        communicationLogsLabel1.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        communicationLogsLabel1.setText(bundle.getString("ServerOverview.communicationLogsLabel1.text_1")); // NOI18N
        communicationLogsLabel1.setName("communicationLogsLabel1"); // NOI18N

        communicationLogsLabel2.setFont(new java.awt.Font("Montserrat SemiBold", 0, 24)); // NOI18N
        communicationLogsLabel2.setForeground(new java.awt.Color(0, 36, 109));
        communicationLogsLabel2.setText(bundle.getString("ServerOverview.communicationLogsLabel2.text_1")); // NOI18N
        communicationLogsLabel2.setName("communicationLogsLabel2"); // NOI18N

        scrollingPane.setName("scrollingPane"); // NOI18N

        mainTable.setFont(new java.awt.Font("Montserrat", 0, 11)); // NOI18N
        mainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Source", "Destination", "Type", "Payload"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mainTable.setAutoscrolls(false);
        mainTable.setFocusable(false);
        mainTable.setGridColor(new java.awt.Color(255, 255, 255));
        mainTable.setIntercellSpacing(new java.awt.Dimension(2, 0));
        mainTable.setName("mainTable"); // NOI18N
        mainTable.setOpaque(false);
        mainTable.setRowHeight(30);
        mainTable.setRowSelectionAllowed(false);
        mainTable.setShowGrid(false);
        mainTable.getTableHeader().setResizingAllowed(false);
        mainTable.getTableHeader().setReorderingAllowed(false);
        mainTable.getTableHeader().setOpaque(false);
        mainTable.getTableHeader().setBackground(Color.white);
        mainTable.getTableHeader().setForeground(Color.black);
        scrollingPane.setViewportView(mainTable);
        if (mainTable.getColumnModel().getColumnCount() > 0) {
            mainTable.getColumnModel().getColumn(0).setResizable(false);
            mainTable.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("ServerOverview.mainTable.columnModel.title0")); // NOI18N
            mainTable.getColumnModel().getColumn(1).setResizable(false);
            mainTable.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("ServerOverview.mainTable.columnModel.title3")); // NOI18N
            mainTable.getColumnModel().getColumn(2).setResizable(false);
            mainTable.getColumnModel().getColumn(2).setHeaderValue(bundle.getString("ServerOverview.mainTable.columnModel.title6")); // NOI18N
            mainTable.getColumnModel().getColumn(3).setResizable(false);
            mainTable.getColumnModel().getColumn(3).setPreferredWidth(200);
            mainTable.getColumnModel().getColumn(3).setHeaderValue(bundle.getString("ServerOverview.mainTable.columnModel.title7")); // NOI18N
        }

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanelLayout.createSequentialGroup()
                        .addComponent(scrollingPane, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanelLayout.createSequentialGroup()
                        .addComponent(communicationLogsLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(communicationLogsLabel2)
                        .addGap(266, 266, 266))))
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(communicationLogsLabel1)
                    .addComponent(communicationLogsLabel2))
                .addGap(18, 18, 18)
                .addComponent(scrollingPane, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        middlePanel.setBackground(new java.awt.Color(255, 255, 255));
        middlePanel.setName("middlePanel"); // NOI18N

        serverStatusTextLabel.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        serverStatusTextLabel.setText(bundle.getString("ServerOverview.serverStatusTextLabel.text_1")); // NOI18N
        serverStatusTextLabel.setName("serverStatusTextLabel"); // NOI18N

        statusLabel.setFont(new java.awt.Font("Montserrat Medium", 0, 13)); // NOI18N
        statusLabel.setText(bundle.getString("ServerOverview.statusLabel.text_1")); // NOI18N
        statusLabel.setName("statusLabel"); // NOI18N

        ipAddressLabel.setFont(new java.awt.Font("Montserrat Medium", 0, 13)); // NOI18N
        ipAddressLabel.setText(bundle.getString("ServerOverview.ipAddressLabel.text_1")); // NOI18N
        ipAddressLabel.setName("ipAddressLabel"); // NOI18N

        portLabel.setFont(new java.awt.Font("Montserrat Medium", 0, 13)); // NOI18N
        portLabel.setText(bundle.getString("ServerOverview.portLabel.text_1")); // NOI18N
        portLabel.setName("portLabel"); // NOI18N

        statusValueLabel.setFont(new java.awt.Font("Montserrat Light", 0, 13)); // NOI18N
        statusValueLabel.setForeground(new java.awt.Color(46, 213, 116));
        statusValueLabel.setText(bundle.getString("ServerOverview.statusValueLabel.text_1")); // NOI18N
        statusValueLabel.setName("statusValueLabel"); // NOI18N

        ipAddressValueLabel.setFont(new java.awt.Font("Montserrat Light", 0, 13)); // NOI18N
        ipAddressValueLabel.setText(bundle.getString("ServerOverview.ipAddressValueLabel.text_1")); // NOI18N
        ipAddressValueLabel.setName("ipAddressValueLabel"); // NOI18N

        portValueLabel.setFont(new java.awt.Font("Montserrat Light", 0, 13)); // NOI18N
        portValueLabel.setText(bundle.getString("ServerOverview.portValueLabel.text_1")); // NOI18N
        portValueLabel.setName("portValueLabel"); // NOI18N

        serverStatusImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphics/broadcast_active.png"))); // NOI18N
        serverStatusImageLabel.setName("serverStatusImageLabel"); // NOI18N

        javax.swing.GroupLayout middlePanelLayout = new javax.swing.GroupLayout(middlePanel);
        middlePanel.setLayout(middlePanelLayout);
        middlePanelLayout.setHorizontalGroup(
            middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, middlePanelLayout.createSequentialGroup()
                .addContainerGap(154, Short.MAX_VALUE)
                .addComponent(serverStatusImageLabel)
                .addGap(71, 71, 71)
                .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(middlePanelLayout.createSequentialGroup()
                        .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statusValueLabel)
                            .addComponent(statusLabel))
                        .addGap(89, 89, 89)
                        .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ipAddressLabel)
                            .addComponent(ipAddressValueLabel))
                        .addGap(60, 60, 60)
                        .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(portValueLabel)
                            .addComponent(portLabel)))
                    .addComponent(serverStatusTextLabel))
                .addGap(185, 185, 185))
        );
        middlePanelLayout.setVerticalGroup(
            middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(middlePanelLayout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, middlePanelLayout.createSequentialGroup()
                        .addComponent(serverStatusImageLabel)
                        .addGap(40, 40, 40))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, middlePanelLayout.createSequentialGroup()
                        .addComponent(serverStatusTextLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(portLabel)
                            .addComponent(ipAddressLabel)
                            .addComponent(statusLabel))
                        .addGap(1, 1, 1)
                        .addGroup(middlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statusValueLabel)
                            .addComponent(ipAddressValueLabel)
                            .addComponent(portValueLabel))
                        .addGap(57, 57, 57))))
        );

        footerPanel.setBackground(new java.awt.Color(255, 255, 255));
        footerPanel.setName("footerPanel"); // NOI18N

        footerTextLabel2.setFont(new java.awt.Font("Montserrat", 0, 9)); // NOI18N
        footerTextLabel2.setForeground(new java.awt.Color(47, 46, 65));
        footerTextLabel2.setText(bundle.getString("ServerOverview.footerTextLabel2.text")); // NOI18N
        footerTextLabel2.setName("footerTextLabel2"); // NOI18N

        footerLicensesTextLabel.setFont(new java.awt.Font("Montserrat", 2, 9)); // NOI18N
        footerLicensesTextLabel.setForeground(new java.awt.Color(47, 46, 65));
        footerLicensesTextLabel.setText(bundle.getString("ServerOverview.footerLicensesTextLabel.text")); // NOI18N
        footerLicensesTextLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        footerLicensesTextLabel.setName("footerLicensesTextLabel"); // NOI18N
        footerLicensesTextLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                footerLicensesTextLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout footerPanelLayout = new javax.swing.GroupLayout(footerPanel);
        footerPanel.setLayout(footerPanelLayout);
        footerPanelLayout.setHorizontalGroup(
            footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(footerPanelLayout.createSequentialGroup()
                .addGap(287, 287, 287)
                .addComponent(footerTextLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(footerLicensesTextLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        footerPanelLayout.setVerticalGroup(
            footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, footerPanelLayout.createSequentialGroup()
                .addGap(0, 2, Short.MAX_VALUE)
                .addGroup(footerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(footerLicensesTextLabel)
                    .addComponent(footerTextLabel2)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 864, Short.MAX_VALUE)
            .addComponent(footerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(middlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                .addGap(2, 2, 2)
                .addComponent(middlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(footerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getAccessibleContext().setAccessibleName(bundle.getString("ServerOverview.AccessibleContext.accessibleName")); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void footerLicensesTextLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_footerLicensesTextLabelMouseClicked
        InterfaceManager.changeWindow(this, new Licenses());
    }//GEN-LAST:event_footerLicensesTextLabelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerOverview.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerOverview.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerOverview.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerOverview.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerOverview(args[0], args[1]).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel communicationLogsLabel1;
    private javax.swing.JLabel communicationLogsLabel2;
    private javax.swing.JLabel footerLicensesTextLabel;
    private javax.swing.JPanel footerPanel;
    private javax.swing.JLabel footerTextLabel1;
    private javax.swing.JLabel footerTextLabel2;
    private javax.swing.JLabel ipAddressLabel;
    private javax.swing.JLabel ipAddressValueLabel;
    private javax.swing.JTable mainTable;
    private javax.swing.JPanel middlePanel;
    private javax.swing.JLabel portLabel;
    private javax.swing.JLabel portValueLabel;
    private javax.swing.JScrollPane scrollingPane;
    private javax.swing.JLabel serverStatusImageLabel;
    private javax.swing.JLabel serverStatusTextLabel;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel statusValueLabel;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables
}
