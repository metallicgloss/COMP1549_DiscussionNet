package work.universitycourse.comp1549.Interfaces.Server;

import java.awt.Color;
import work.universitycourse.comp1549.Components.JRoundedTextField;
import work.universitycourse.comp1549.Interfaces.Licenses;
import work.universitycourse.comp1549.Modules.InterfaceManager;

/**
 *
 * @author Adnan Turan
 * @author Daniel Browne
 * @author Gabriel Netz
 * @author William Phillips
 * 
 */
public class ServerConfiguration extends javax.swing.JFrame {

    /**
     * Creates new form serverManagementConfiguration
     */
    public ServerConfiguration() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        serverConfigurationPanel = new javax.swing.JPanel();
        serverManagementConfigurationLabel1 = new javax.swing.JLabel();
        serverManagementConfigurationLabel2 = new javax.swing.JLabel();
        configuredIPAddresLabel = new javax.swing.JLabel();
        assignedNetworkPortLabel = new javax.swing.JLabel();
        assignedNetworkPortTextfield = new JRoundedTextField();
        userMessagesIconLabel = new javax.swing.JLabel();
        provisionServerButton = new javax.swing.JButton();
        mainImage = new javax.swing.JLabel();
        configuredIPAddressTextfield = new JRoundedTextField();
        footerTextLabel1 = new javax.swing.JLabel();
        footerLicensesTextLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("work/universitycourse/comp1549/Interfaces/Server/Bundle"); // NOI18N
        setTitle(bundle.getString("ServerConfiguration.title")); // NOI18N
        setBackground(new java.awt.Color(255, 255, 255));
        setIconImage(InterfaceManager.programIcon.getImage());
        setMinimumSize(new java.awt.Dimension(854, 519));
        setName("DiscussionNet"); // NOI18N
        setResizable(false);

        serverConfigurationPanel.setBackground(new java.awt.Color(255, 255, 255));
        serverConfigurationPanel.setMaximumSize(new java.awt.Dimension(847, 519));
        serverConfigurationPanel.setMinimumSize(new java.awt.Dimension(847, 519));
        serverConfigurationPanel.setName("serverConfigurationPanel"); // NOI18N
        serverConfigurationPanel.setPreferredSize(new java.awt.Dimension(847, 519));
        InterfaceManager.detectExitRequest(serverConfigurationPanel);
        serverConfigurationPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                serverConfigurationPanelMouseClicked(evt);
            }
        });
        serverConfigurationPanel.setLayout(null);

        serverManagementConfigurationLabel1.setFont(new java.awt.Font("Montserrat SemiBold", 0, 24)); // NOI18N
        serverManagementConfigurationLabel1.setForeground(new java.awt.Color(0, 36, 109));
        serverManagementConfigurationLabel1.setText(bundle.getString("ServerConfiguration.serverManagementConfigurationLabel1.text_1")); // NOI18N
        serverManagementConfigurationLabel1.setName("serverManagementConfigurationLabel1"); // NOI18N
        serverConfigurationPanel.add(serverManagementConfigurationLabel1);
        serverManagementConfigurationLabel1.setBounds(233, 238, 79, 30);

        serverManagementConfigurationLabel2.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        serverManagementConfigurationLabel2.setText(bundle.getString("ServerConfiguration.serverManagementConfigurationLabel2.text_1")); // NOI18N
        serverManagementConfigurationLabel2.setName("serverManagementConfigurationLabel2"); // NOI18N
        serverConfigurationPanel.add(serverManagementConfigurationLabel2);
        serverManagementConfigurationLabel2.setBounds(318, 238, 335, 30);

        configuredIPAddresLabel.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        configuredIPAddresLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wireless.png"))); // NOI18N
        configuredIPAddresLabel.setText(bundle.getString("ServerConfiguration.configuredIPAddresLabel.text_1")); // NOI18N
        configuredIPAddresLabel.setName("configuredIPAddresLabel"); // NOI18N
        serverConfigurationPanel.add(configuredIPAddresLabel);
        configuredIPAddresLabel.setBounds(140, 310, 162, 17);

        assignedNetworkPortLabel.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        assignedNetworkPortLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/port_icon.png"))); // NOI18N
        assignedNetworkPortLabel.setText(bundle.getString("ServerConfiguration.assignedNetworkPortLabel.text_1")); // NOI18N
        assignedNetworkPortLabel.setName("assignedNetworkPortLabel"); // NOI18N
        serverConfigurationPanel.add(assignedNetworkPortLabel);
        assignedNetworkPortLabel.setBounds(549, 310, 166, 17);

        assignedNetworkPortTextfield.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        assignedNetworkPortTextfield.setForeground(new java.awt.Color(152, 150, 162));
        assignedNetworkPortTextfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        assignedNetworkPortTextfield.setText(bundle.getString("ServerConfiguration.assignedNetworkPortTextfield.text")); // NOI18N
        assignedNetworkPortTextfield.setCaretColor(new java.awt.Color(152, 150, 162));
        assignedNetworkPortTextfield.setDisabledTextColor(new java.awt.Color(152, 150, 162));
        assignedNetworkPortTextfield.setMargin(new java.awt.Insets(0, 5, 0, 5));
        assignedNetworkPortTextfield.setName("assignedNetworkPortTextfield"); // NOI18N
        assignedNetworkPortTextfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                assignedNetworkPortTextfieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                assignedNetworkPortTextfieldFocusLost(evt);
            }
        });
        serverConfigurationPanel.add(assignedNetworkPortTextfield);
        assignedNetworkPortTextfield.setBounds(456, 333, 334, 30);

        userMessagesIconLabel.setBackground(new java.awt.Color(255, 255, 255));
        userMessagesIconLabel.setForeground(new java.awt.Color(255, 255, 255));
        userMessagesIconLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userMessagesIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/arrow_icon.png"))); // NOI18N
        userMessagesIconLabel.setText(bundle.getString("ServerConfiguration.userMessagesIconLabel.text")); // NOI18N
        userMessagesIconLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        userMessagesIconLabel.setFocusable(false);
        userMessagesIconLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        userMessagesIconLabel.setIconTextGap(0);
        userMessagesIconLabel.setInheritsPopupMenu(false);
        userMessagesIconLabel.setName("userMessagesIconLabel"); // NOI18N
        userMessagesIconLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userMessagesIconLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                userMessagesIconLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                userMessagesIconLabelMouseExited(evt);
            }
        });
        serverConfigurationPanel.add(userMessagesIconLabel);
        userMessagesIconLabel.setBounds(480, 390, 30, 30);

        provisionServerButton.setBackground(new java.awt.Color(255, 255, 255));
        provisionServerButton.setFont(new java.awt.Font("Montserrat", 0, 15)); // NOI18N
        provisionServerButton.setForeground(new java.awt.Color(255, 255, 255));
        provisionServerButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/large.png"))); // NOI18N
        provisionServerButton.setText(bundle.getString("ServerConfiguration.provisionServerButton.text_1")); // NOI18N
        provisionServerButton.setBorder(null);
        provisionServerButton.setBorderPainted(false);
        provisionServerButton.setContentAreaFilled(false);
        provisionServerButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        provisionServerButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        provisionServerButton.setIconTextGap(3);
        provisionServerButton.setName("provisionServerButton"); // NOI18N
        provisionServerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                provisionServerButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                provisionServerButtonMouseExited(evt);
            }
        });
        provisionServerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provisionServerButtonActionPerformed(evt);
            }
        });
        serverConfigurationPanel.add(provisionServerButton);
        provisionServerButton.setBounds(50, 370, 761, 69);

        mainImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphics/settings.png"))); // NOI18N
        mainImage.setName("mainImage"); // NOI18N
        serverConfigurationPanel.add(mainImage);
        mainImage.setBounds(272, 40, 315, 192);

        configuredIPAddressTextfield.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        configuredIPAddressTextfield.setForeground(new java.awt.Color(152, 150, 162));
        configuredIPAddressTextfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        configuredIPAddressTextfield.setText(bundle.getString("ServerConfiguration.configuredIPAddressTextfield.text")); // NOI18N
        configuredIPAddressTextfield.setCaretColor(new java.awt.Color(152, 150, 162));
        configuredIPAddressTextfield.setDisabledTextColor(new java.awt.Color(152, 150, 162));
        configuredIPAddressTextfield.setMargin(new java.awt.Insets(0, 5, 0, 5));
        configuredIPAddressTextfield.setName("configuredIPAddressTextfield"); // NOI18N
        configuredIPAddressTextfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                configuredIPAddressTextfieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                configuredIPAddressTextfieldFocusLost(evt);
            }
        });
        serverConfigurationPanel.add(configuredIPAddressTextfield);
        configuredIPAddressTextfield.setBounds(68, 333, 334, 30);

        footerTextLabel1.setFont(new java.awt.Font("Montserrat", 0, 9)); // NOI18N
        footerTextLabel1.setForeground(new java.awt.Color(47, 46, 65));
        footerTextLabel1.setText(bundle.getString("ServerConfiguration.footerTextLabel1.text")); // NOI18N
        footerTextLabel1.setName("footerTextLabel1"); // NOI18N
        serverConfigurationPanel.add(footerTextLabel1);
        footerTextLabel1.setBounds(292, 507, 189, 12);

        footerLicensesTextLabel.setFont(new java.awt.Font("Montserrat", 2, 9)); // NOI18N
        footerLicensesTextLabel.setForeground(new java.awt.Color(47, 46, 65));
        footerLicensesTextLabel.setText(bundle.getString("ServerConfiguration.footerLicensesTextLabel.text")); // NOI18N
        footerLicensesTextLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        footerLicensesTextLabel.setName("footerLicensesTextLabel"); // NOI18N
        footerLicensesTextLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                footerLicensesTextLabelMouseClicked(evt);
            }
        });
        serverConfigurationPanel.add(footerLicensesTextLabel);
        footerLicensesTextLabel.setBounds(487, 507, 80, 12);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(serverConfigurationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(serverConfigurationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleName(bundle.getString("ServerConfiguration.AccessibleContext.accessibleName")); // NOI18N
        getAccessibleContext().setAccessibleDescription(bundle.getString("ServerConfiguration.AccessibleContext.accessibleDescription")); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void footerLicensesTextLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_footerLicensesTextLabelMouseClicked
        InterfaceManager.displayLicenses();
    }//GEN-LAST:event_footerLicensesTextLabelMouseClicked

    private void configuredIPAddressTextfieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_configuredIPAddressTextfieldFocusGained
        InterfaceManager.toggleTextFieldFocus(configuredIPAddressTextfield, true);
    }//GEN-LAST:event_configuredIPAddressTextfieldFocusGained

    private void configuredIPAddressTextfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_configuredIPAddressTextfieldFocusLost
        InterfaceManager.toggleTextFieldFocus(configuredIPAddressTextfield, false);
    }//GEN-LAST:event_configuredIPAddressTextfieldFocusLost

    private void assignedNetworkPortTextfieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_assignedNetworkPortTextfieldFocusGained
        InterfaceManager.toggleTextFieldFocus(assignedNetworkPortTextfield, true);
    }//GEN-LAST:event_assignedNetworkPortTextfieldFocusGained

    private void assignedNetworkPortTextfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_assignedNetworkPortTextfieldFocusLost
        InterfaceManager.toggleTextFieldFocus(assignedNetworkPortTextfield, false);
    }//GEN-LAST:event_assignedNetworkPortTextfieldFocusLost

    private void serverConfigurationPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_serverConfigurationPanelMouseClicked
        InterfaceManager.toggleTextFieldFocus(configuredIPAddressTextfield, false);
        InterfaceManager.toggleTextFieldFocus(assignedNetworkPortTextfield, false);
    }//GEN-LAST:event_serverConfigurationPanelMouseClicked

    private void userMessagesIconLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userMessagesIconLabelMouseClicked
        provisionServer();
    }//GEN-LAST:event_userMessagesIconLabelMouseClicked

    private void userMessagesIconLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userMessagesIconLabelMouseEntered
        InterfaceManager.buttonHover(provisionServerButton, true, "large");
    }//GEN-LAST:event_userMessagesIconLabelMouseEntered

    private void provisionServerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provisionServerButtonActionPerformed
        provisionServer();
    }//GEN-LAST:event_provisionServerButtonActionPerformed

    private void provisionServerButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_provisionServerButtonMouseEntered
        InterfaceManager.buttonHover(provisionServerButton, true, "large");
    }//GEN-LAST:event_provisionServerButtonMouseEntered

    private void provisionServerButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_provisionServerButtonMouseExited
        InterfaceManager.buttonHover(provisionServerButton, false, "large");
    }//GEN-LAST:event_provisionServerButtonMouseExited

    private void userMessagesIconLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userMessagesIconLabelMouseExited
        InterfaceManager.buttonHover(provisionServerButton, false, "large");
    }//GEN-LAST:event_userMessagesIconLabelMouseExited
    
    private void provisionServer() {
        InterfaceManager.changeWindow(this, new ServerOverview(configuredIPAddressTextfield.getText(), assignedNetworkPortTextfield.getText()));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerConfiguration.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerConfiguration.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerConfiguration.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerConfiguration.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        }
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerConfiguration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel assignedNetworkPortLabel;
    private javax.swing.JTextField assignedNetworkPortTextfield;
    private javax.swing.JLabel configuredIPAddresLabel;
    private javax.swing.JTextField configuredIPAddressTextfield;
    private javax.swing.JLabel footerLicensesTextLabel;
    private javax.swing.JLabel footerTextLabel1;
    private javax.swing.JLabel mainImage;
    private javax.swing.JButton provisionServerButton;
    private javax.swing.JPanel serverConfigurationPanel;
    private javax.swing.JLabel serverManagementConfigurationLabel1;
    private javax.swing.JLabel serverManagementConfigurationLabel2;
    private javax.swing.JLabel userMessagesIconLabel;
    // End of variables declaration//GEN-END:variables
}
