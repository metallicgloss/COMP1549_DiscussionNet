package work.universitycourse.comp1549.Interfaces.Server;

import work.universitycourse.comp1549.Components.RoundJTextField;
import work.universitycourse.comp1549.Modules.InterfaceManager;

/**
 *
 * @author Adnan Turan
 * @author Daniel Browne
 * @author Gabriel Netz
 * @author William Phillips
 * 
 */
public class ServerConfiguration extends javax.swing.JFrame {

        /**
         * Creates new form serverManagementConfiguration
         */
        public ServerConfiguration() {
                initComponents();
        }

        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated
        // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        serverManagementConfigurationLabel1 = new javax.swing.JLabel();
        serverManagementConfigurationLabel2 = new javax.swing.JLabel();
        configuredIPAddresLabel = new javax.swing.JLabel();
        assignedNetworkPortLabel = new javax.swing.JLabel();
        assignedNetworkPortTextfield = new RoundJTextField();
        provisionServerButton = new javax.swing.JButton();
        footerTextLabel = new javax.swing.JLabel();
        mainImage = new javax.swing.JLabel();
        configuredIPAddressTextfield = new RoundJTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(854, 519));
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setMaximumSize(new java.awt.Dimension(847, 519));
        mainPanel.setMinimumSize(new java.awt.Dimension(847, 519));
        mainPanel.setPreferredSize(new java.awt.Dimension(847, 519));

        serverManagementConfigurationLabel1.setFont(new java.awt.Font("Montserrat SemiBold", 0, 24)); // NOI18N
        serverManagementConfigurationLabel1.setForeground(new java.awt.Color(0, 36, 109));
        serverManagementConfigurationLabel1.setText("Server");

        serverManagementConfigurationLabel2.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        serverManagementConfigurationLabel2.setText("Management Configuration");

        configuredIPAddresLabel.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        configuredIPAddresLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wireless.png"))); // NOI18N
        configuredIPAddresLabel.setText("Configured IP Address");

        assignedNetworkPortLabel.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        assignedNetworkPortLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/port_icon.png"))); // NOI18N
        assignedNetworkPortLabel.setText("Assigned Network Port");

        assignedNetworkPortTextfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        provisionServerButton.setBackground(new java.awt.Color(255, 255, 255));
        provisionServerButton.setFont(new java.awt.Font("Montserrat", 0, 15)); // NOI18N
        provisionServerButton.setForeground(new java.awt.Color(255, 255, 255));
        provisionServerButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/buttons/large.png"))); // NOI18N
        provisionServerButton.setText("Provision Server");
        provisionServerButton.setBorder(null);
        provisionServerButton.setBorderPainted(false);
        provisionServerButton.setContentAreaFilled(false);
        provisionServerButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        provisionServerButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        provisionServerButton.setIconTextGap(3);
        provisionServerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                provisionServerButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                provisionServerButtonMouseExited(evt);
            }
        });
        provisionServerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provisionServerButtonActionPerformed(evt);
            }
        });

        footerTextLabel.setFont(new java.awt.Font("Montserrat", 0, 9)); // NOI18N
        footerTextLabel.setText("DiscussionNet V1.0 - Â© Code Squad 2021 - Software Licenses");

        mainImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graphics/settings.png"))); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(provisionServerButton)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(serverManagementConfigurationLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(serverManagementConfigurationLabel2))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(footerTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(mainImage))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(configuredIPAddressTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(assignedNetworkPortTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(configuredIPAddresLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(assignedNetworkPortLabel)
                                .addGap(95, 95, 95)))))
                .addGap(37, 37, 37))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(mainImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serverManagementConfigurationLabel1)
                    .addComponent(serverManagementConfigurationLabel2))
                .addGap(42, 42, 42)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(configuredIPAddresLabel)
                    .addComponent(assignedNetworkPortLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(configuredIPAddressTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assignedNetworkPortTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(provisionServerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(footerTextLabel)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void provisionServerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provisionServerButtonActionPerformed
        InterfaceManager.changeWindow(this, new ServerLogsActive());
    }//GEN-LAST:event_provisionServerButtonActionPerformed

    private void provisionServerButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_provisionServerButtonMouseEntered
        InterfaceManager.buttonHover(provisionServerButton, true, "large");
    }//GEN-LAST:event_provisionServerButtonMouseEntered

    private void provisionServerButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_provisionServerButtonMouseExited
        InterfaceManager.buttonHover(provisionServerButton, false, "large");
    }//GEN-LAST:event_provisionServerButtonMouseExited

        /**
         * @param args the command line arguments
         */
        public static void main(String args[]) {
                /* Set the Nimbus look and feel */
                // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
                // (optional) ">
                /*
                 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
                 * look and feel. For details see
                 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
                 */
                try {
                        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
                                        .getInstalledLookAndFeels()) {
                                if ("Nimbus".equals(info.getName())) {
                                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                        break;
                                }
                        }
                } catch (ClassNotFoundException ex) {
                        java.util.logging.Logger.getLogger(ServerConfiguration.class.getName())
                                        .log(java.util.logging.Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                        java.util.logging.Logger.getLogger(ServerConfiguration.class.getName())
                                        .log(java.util.logging.Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                        java.util.logging.Logger.getLogger(ServerConfiguration.class.getName())
                                        .log(java.util.logging.Level.SEVERE, null, ex);
                } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                        java.util.logging.Logger.getLogger(ServerConfiguration.class.getName())
                                        .log(java.util.logging.Level.SEVERE, null, ex);
                }
                // </editor-fold>
                // </editor-fold>
                // </editor-fold>
                // </editor-fold>

                /* Create and display the form */
                java.awt.EventQueue.invokeLater(new Runnable() {
                        public void run() {
                                new ServerConfiguration().setVisible(true);
                        }
                });
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel assignedNetworkPortLabel;
    private javax.swing.JTextField assignedNetworkPortTextfield;
    private javax.swing.JLabel configuredIPAddresLabel;
    private javax.swing.JTextField configuredIPAddressTextfield;
    private javax.swing.JLabel footerTextLabel;
    private javax.swing.JLabel mainImage;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton provisionServerButton;
    private javax.swing.JLabel serverManagementConfigurationLabel1;
    private javax.swing.JLabel serverManagementConfigurationLabel2;
    // End of variables declaration//GEN-END:variables
}
